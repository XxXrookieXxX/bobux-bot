from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
)
import math
import os


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—åüëã!\n\n–°–∫–æ–ª—å–∫–æ —Ä–æ–±—É–∫—Å–æ–≤ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å?\n(–í–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ)"
    )
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —á–∏—Å–ª–∞
    context.user_data["waiting_for_number"] = True


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã —á–∏—Å–ª–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if context.user_data.get("waiting_for_number"):
        try:
            number = float(text)
            result = math.ceil(number * 1.43)
            await update.message.reply_text(
                f"–¢–æ–≥–¥–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –≥–µ–π–º–ø–∞—Å—Å –Ω–∞ —Å—É–º–º—É: {result} —Ä–æ–±—É–∫—Å–æ–≤!"
            )

            # –ú–æ–∂–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ –∂–¥—ë–º –≤–≤–æ–¥
            context.user_data["waiting_for_number"] = False

        except ValueError:
            await update.message.reply_text(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100)"
            )
    else:
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ üòä")
def main():
    import os
    TOKEN = os.getenv('TELEGRAM_TOKEN')  # —Ç–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è

    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_polling()

if __name__ == '__main__':
    main()
