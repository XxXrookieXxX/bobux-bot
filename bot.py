from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    CallbackQueryHandler,
    filters,
)
import math
import os


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—åüëã!\n\n–°–∫–æ–ª—å–∫–æ —Ä–æ–±—É–∫—Å–æ–≤ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å?\n(–í–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ)"
    )
    context.user_data["waiting_for_number"] = True


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()

    if context.user_data.get("waiting_for_number"):
        try:
            number = float(text)
            result = math.ceil(number * 1.43)

            # —Å–æ–∑–¥–∞–µ–º –º–µ–Ω—é –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∏—Å–ª–∞
            keyboard = [
                [
                    InlineKeyboardButton("üîÅ –ü–æ—Å—á–∏—Ç–∞—Ç—å —Å–Ω–æ–≤–∞", callback_data="again"),
                    InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help"),
                ],
                [
                    InlineKeyboardButton("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu"),
                ],
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            await update.message.reply_text(
                f"üí∞ –ü–æ—Å–ª–µ —É–º–Ω–æ–∂–µ–Ω–∏—è –Ω–∞ 1.43 –∏ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –≤–≤–µ—Ä—Ö –ø–æ–ª—É—á–∞–µ—Ç—Å—è: {result}",
                reply_markup=reply_markup,
            )

            context.user_data["waiting_for_number"] = False

        except ValueError:
            await update.message.reply_text("‚ùå –í–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100)")
    else:
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å üòä")


async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏."""
    query = update.callback_query
    await query.answer()  # –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, —á—Ç–æ–±—ã Telegram –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–ª ¬´–∑–∞–≥—Ä—É–∑–∫–∞...¬ª

    if query.data == "again":
        await query.edit_message_text("–•–æ—Ä–æ—à–æ! –í–≤–µ–¥–∏ –Ω–æ–≤–æ–µ —á–∏—Å–ª–æ üëá")
        context.user_data["waiting_for_number"] = True

    elif query.data == "help":
        await query.edit_message_text(
            "üìñ –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ ‚Äî —è —É–º–Ω–æ–∂—É –µ–≥–æ –Ω–∞ 1.43 –∏ –æ–∫—Ä—É–≥–ª—é –≤–≤–µ—Ä—Ö.\n\n"
            "–ù–∞–ø—Ä–∏–º–µ—Ä: 100 ‚Üí 143"
        )

    elif query.data == "menu":
        await query.edit_message_text(
            "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:\n"
            "‚Äî /start —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ\n"
            "‚Äî –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞\n"
            "‚Äî –ò–ª–∏ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–Ω–æ–ø–∫–∞–º–∏ üëá"
        )


def main():
    TOKEN = os.getenv("TELEGRAM_TOKEN")

    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler("start", start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.add_handler(CallbackQueryHandler(button_handler))

    application.run_polling()


if __name__ == "__main__":
    main()
