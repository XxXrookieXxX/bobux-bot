from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
import requests

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—åüëã!\n\n–°–∫–æ–ª—å–∫–æ —Ä–æ–±—É–∫—Å–æ–≤ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å?')
    context.user_data["waiting_for_number"]=True

async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f'–í—ã —Å–∫–∞–∑–∞–ª–∏: {update.message.text}')


ChatGPT
–í—ã —Å–∫–∞–∑–∞–ª–∏:
–∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å —á—Ç–æ–±—ã —Ç–≥ –±–æ—Ç –æ–∂–∏–¥–∞–ª –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –∞ –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –¥–∞–Ω–Ω—ã–µ —Ç–æ –ø—Ä–æ–≤–µ—Ä–∏–ª –µ—Å–ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ —Ç–æ –Ω–∞–ø—Ä–∏–º–µ—Ä —É–º–Ω–æ–∂–∏–ª –Ω–∞ 1.43 —Å –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ–º –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É –≤–æ—Ç –∫–æ–¥ –±–æ—Ç–∞: 
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes, MessageHandler, filters
import requests

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('–ü—Ä–∏–≤–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—åüëã!\n\n–°–∫–æ–ª—å–∫–æ —Ä–æ–±—É–∫—Å–æ–≤ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å?')

async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(f'–í—ã —Å–∫–∞–∑–∞–ª–∏: {update.message.text}')

def main():
    import os
    TOKEN = os.getenv('TELEGRAM_TOKEN')  # —Ç–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è

    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    application.run_polling()

if __name__ == '__main__':
    main()
ChatGPT —Å–∫–∞–∑–∞–ª:
–•–æ—Ä–æ—à–æ üëç
–¢—ã –ø–æ—á—Ç–∏ –≤—Å—ë —Å–¥–µ–ª–∞–ª –ø—Ä–∞–≤–∏–ª—å–Ω–æ ‚Äî –Ω—É–∂–Ω–æ –ª–∏—à—å –Ω–µ–º–Ω–æ–≥–æ –¥–æ—Ä–∞–±–æ—Ç–∞—Ç—å –ª–æ–≥–∏–∫—É, —á—Ç–æ–±—ã –±–æ—Ç –∂–¥–∞–ª –≤–≤–æ–¥–∞ —á–∏—Å–ª–∞, –ø—Ä–æ–≤–µ—Ä—è–ª, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –ª–∏ —ç—Ç–æ —á–∏—Å–ª–æ, –∏ –∑–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω—è–ª –Ω—É–∂–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, —É–º–Ω–æ–∂–∞–ª –Ω–∞ 1.43 –∏ –æ–∫—Ä—É–≥–ª—è–ª –≤ –±–æ–ª—å—à—É—é —Å—Ç–æ—Ä–æ–Ω—É).

–í–æ—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–±–æ—á–∏–π –ø—Ä–∏–º–µ—Ä:

from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
)
import math
import os


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç –ø–æ–∫—É–ø–∞—Ç–µ–ª—åüëã!\n\n–°–∫–æ–ª—å–∫–æ —Ä–æ–±—É–∫—Å–æ–≤ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å?\n(–í–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–æ)"
    )
    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è —á–∏—Å–ª–∞
    context.user_data["waiting_for_number"] = True


async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ–º –ª–∏ –º—ã —á–∏—Å–ª–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if context.user_data.get("waiting_for_number"):
        try:
            number = float(text)
            result = math.ceil(number * 1.43)
            await update.message.reply_text(
                f"–¢–æ–≥–¥–∞ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –≥–µ–π–º–ø–∞—Å—Å –Ω–∞ —Å—É–º–º—É: {result} —Ä–æ–±—É–∫—Å–æ–≤!"
            )

            # –ú–æ–∂–Ω–æ —Å–±—Ä–æ—Å–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –µ—Å–ª–∏ –±–æ–ª—å—à–µ –Ω–µ –∂–¥—ë–º –≤–≤–æ–¥
            context.user_data["waiting_for_number"] = False

        except ValueError:
            await update.message.reply_text(
                "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 100)"
            )
    else:
        await update.message.reply_text("–ù–∞–ø–∏—à–∏ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞ üòä")
def main():
    import os
    TOKEN = os.getenv('TELEGRAM_TOKEN')  # —Ç–æ–∫–µ–Ω –±–µ—Ä—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è

    application = ApplicationBuilder().token(TOKEN).build()

    application.add_handler(CommandHandler('start', start))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    application.run_polling()

if __name__ == '__main__':
    main()
